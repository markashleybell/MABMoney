@model MABMoney.Web.Models.Home.IndexViewModel
@using MABMoney.Web.Models.Home
@using MABMoney.Services.DTO;

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/Master.cshtml";
}

@if(Model.Debug != null) {
<div class="row">
    <div class="span12">@Model.Debug</div>
</div>
}

<div class="row">
    <div class="span4">
        @*@Model.From.ToString("dd/MM/yyyy")-@Model.To.ToString("dd/MM/yyyy")*@
        @using (Html.BeginForm("", "Home", FormMethod.Post, new { @class = "form-inline" })) {
            <p>@Html.DropDownListFor(x => x.Account_AccountID, Model.Accounts, new { id = "account-selector" }) </p>
            <noscript><input type="submit" class="btn" value="Go" /></noscript>
        }
    </div> 
    <div class="span8"><div class="heading-mimic">@Model.Account.CurrentBalance.ToString("c")</div></div>
</div>



@*<p>Starting Balance: @Model.Account.StartingBalance.ToString("#0.00"), Current Balance: @Model.Account.CurrentBalance.ToString("#0.00")</p>*@

@*<div class="row" id="test">
    <div class="span1">&nbsp;</div>
    <div class="span1">&nbsp;</div>
    <div class="span1">&nbsp;</div>
    <div class="span1">&nbsp;</div>
    <div class="span1">&nbsp;</div>
    <div class="span1">&nbsp;</div>
    <div class="span1">&nbsp;</div>
    <div class="span1">&nbsp;</div>
    <div class="span1">&nbsp;</div>
    <div class="span1">&nbsp;</div>
    <div class="span1">&nbsp;</div>
    <div class="span1">&nbsp;</div>
</div>*@

<ul class="nav nav-tabs lge">

    @if(Model.Account.Type == AccountTypeDTO.Current) {
    <li @Html.Raw((Model.Tab == DashboardTab.BudgetOrPaymentCalc) ? "class=\"active\"" : "")><a href="#budget" data-toggle="tab">Budget @((Model.Budget != null) ? Model.Budget.Start.ToString("dd/MM/yy") + " - " + Model.Budget.End.ToString("dd/MM/yy") : "")</a></li>
    }
    @if (Model.Account.Type == AccountTypeDTO.CreditCard || Model.Account.Type == AccountTypeDTO.Loan) {
    <li @Html.Raw((Model.Tab == DashboardTab.BudgetOrPaymentCalc) ? "class=\"active\"" : "")><a href="#payment-calculator" data-toggle="tab">Payment Calculator</a></li>
    }

    <li @Html.Raw((Model.Tab == DashboardTab.Income) ? "class=\"active\"" : "")><a href="#income" data-toggle="tab">Income: @Model.Transactions.Where(t => t.Amount > 0 && t.Date >= Model.From).Sum(x => x.Amount)</a></li>
    <li @Html.Raw((Model.Tab == DashboardTab.Expenses) ? "class=\"active\"" : "")><a href="#expenses" data-toggle="tab">Expenses: @Model.Transactions.Where(t => t.Amount < 0 && t.Date >= Model.From).Sum(x => Math.Abs(x.Amount))</a></li>

    
</ul>
<div class="tab-content">

    <!-- BEGIN INCOME TAB -->

    <div class="tab-pane@((Model.Tab == DashboardTab.Income) ? " active" : "")" id="income">
        @using (Html.BeginForm("CreateTransaction", "Home")) {
            <div class="controls controls-row">
                @Html.EditorFor(x => x.Date, new { @class = "span2", placeholder = "Date" })
                @Html.DropDownListFor(x => x.Category_CategoryID, Model.IncomeCategories, "Category...", new { @class = "span2" })
                @Html.TextBoxFor(x => x.Description, new { @class = "span4", placeholder = "Description (optional)" })
                @Html.TextBoxFor(x => x.Amount, new { @class = "span2", placeholder = "Amount" })              
                <div class="span2">
                    <input type="submit" value="Add Income" class="btn btn-primary" />
                </div>
                @Html.HiddenFor(x => x.Account_AccountID)
                <input data-val="true" data-val-required="The Type field is required." name="Type" type="hidden" value="Income">
            </div>
        }
        <table class="table table-striped">
            <caption>Transaction List</caption>
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Category</th>
                    <th>Description</th>
                    <th>Amount</th>
                    <th>Edit</th>
                </tr>
            </thead>
            <tbody>
                @{
                    var incomeTransactions = Model.Transactions.Where(t => t.Amount > 0).OrderByDescending(x => x.Date).ThenByDescending(x => x.TransactionID).Take(10);
                }
                @foreach (var transaction in incomeTransactions) {
                <tr@((transaction.Date < Model.From) ? new MvcHtmlString(" class=\"before-budget-start\"") : new MvcHtmlString(""))>
                    <td>@transaction.Date.ToString("dd/MM/yyyy")</td>
                    <td>@transaction.Category.Name</td>
                    <td>@transaction.Description</td>
                    <td>@transaction.Amount.ToString("#0.00")</td>
                    <td>@Html.ActionLink("Edit", "Edit", "Transactions", new { id = transaction.TransactionID }, null)</td>
                </tr@()>
                }
            </tbody>
        </table>
        @{ Html.RenderPartial("MoreTransactionsLink", new MoreTransactionsViewModel { From = Model.From, Transactions = incomeTransactions }); }
    </div>

    <!-- END INCOME TAB -->

    <!-- BEGIN EXPENSES TAB -->

    <div class="tab-pane@((Model.Tab == DashboardTab.Expenses) ? " active" : "")" id="expenses">
        @using (Html.BeginForm("CreateTransaction", "Home")) {
            <div class="controls controls-row">
                @Html.EditorFor(x => x.Date, new { @class = "span2", placeholder = "Date" })
                @Html.DropDownListFor(x => x.Category_CategoryID, Model.ExpenseCategories, "Category...", new { @class = "span2" })
                @Html.TextBoxFor(x => x.Description, new { @class = "span4", placeholder = "Description (optional)" })
                @Html.TextBoxFor(x => x.Amount, new { @class = "span2", placeholder = "Amount" })              
                <div class="span2">
                    <input type="submit" value="Add Expense" class="btn btn-primary" />
                </div>
                @Html.HiddenFor(x => x.Account_AccountID)
                <input data-val="true" data-val-required="The Type field is required." name="Type" type="hidden" value="Expense">
            </div>
        }
        <table class="table table-striped">
            <caption>Transaction List</caption>
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Category</th>
                    <th>Description</th>
                    <th>Amount</th>
                    <th>Edit</th>
                </tr>
            </thead>
            <tbody>
                @{
                    var expenseTransactions = Model.Transactions.Where(t => t.Amount < 0).OrderByDescending(x => x.Date).ThenByDescending(x => x.TransactionID).Take(10);
                }
                @foreach (var transaction in expenseTransactions) {
                <tr@((transaction.Date < Model.From) ? new MvcHtmlString(" class=\"before-budget-start\"") : new MvcHtmlString(""))>
                    <td>@transaction.Date.ToString("dd/MM/yyyy")</td>
                    <td>@transaction.Category.Name</td>
                    <td>@transaction.Description</td>
                    <td>@transaction.Amount.ToString("#0.00")</td>
                    <td>@Html.ActionLink("Edit", "Edit", "Transactions", new { id = transaction.TransactionID }, null)</td>
                </tr>
                }
            </tbody>
        </table>
        @{ Html.RenderPartial("MoreTransactionsLink", new MoreTransactionsViewModel { From = Model.From, Transactions = expenseTransactions }); }
    </div>    

    <!-- END EXPENSES TAB -->

    <!-- BEGIN BUDGET TAB -->

    @if(Model.Account.Type == AccountTypeDTO.Current) {
        
    <div class="tab-pane@((Model.Tab == DashboardTab.BudgetOrPaymentCalc) ? " active" : "")" id="budget">

        @{ Html.RenderPartial("~/Views/Budgets/BudgetGraph.cshtml", Model.Budget.Category_Budgets); }

        <div class="row button-row">
            <div class="span2">
                @if (Model.Budget != null) {
                    @Html.ActionLink("Edit this budget", "Edit", "Budgets", new { id = Model.Budget.BudgetID }, new { @class = "btn btn-primary" })
                }
            </div>
            <div class="span8">&nbsp;</div>
            <div class="span2">
                @Html.ActionLink("Add a new budget", "Create", "Budgets", new { id = Model.Account_AccountID }, new { @class = "btn btn-primary pull-right" })
            </div>
        </div>

        <p></p>
    </div>
        
    }

    <!-- END BUDGET TAB -->

    <!-- BEGIN PAYMENT CALC TAB -->

    @if(Model.Account.Type == AccountTypeDTO.CreditCard || Model.Account.Type == AccountTypeDTO.Loan) {
        
    <div class="tab-pane@((Model.Tab == DashboardTab.BudgetOrPaymentCalc) ? " active" : "")" id="payment-calculator"> 
        
        <form>
            <div class="controls controls-row">
                <input class="span2" id="payment-calculator-currentbalance" name="payment-calculator-currentbalance" type="text" value="@Math.Abs(Model.Account.CurrentBalance).ToString("#0.00")">
                <input class="span2" id="payment-calculator-paymentamount" name="payment-calculator-paymentamount" type="text" value="200">
                <input class="span2" id="payment-calculator-interestrate" name="payment-calculator-interestrate" type="text" value="16.9">
                <input class="span2" id="payment-calculator-minpaymentpercentage" name="payment-calculator-currentbalance" type="text" value="3">
                <div class="span2"></div>
                <div class="span2">
                    <input type="button" id="payment-calculator-recalculate" value="Recalculate" class="btn btn-primary" />
                </div>
            </div>
        </form>

        <table class="table table-striped" id="payment-calculator-table">
            <caption>Transaction List</caption>
            <thead>
                <tr>
                    <th>Month</th>
                    <th>Balance at Month Start</th>
                    <th>Interest</th>
                    <th>Min Payment</th>
                    <th>Actual Payment</th>
                    <th>Balance at Month End</th>
                </tr>
            </thead>
            <tbody>
                
            </tbody>
        </table>

    </div>
        
    }

    <!-- END PAYMENT CALC TAB -->

 <p></p>

@* <div class="row" id="test">
    <div class="span1">&nbsp;</div>
    <div class="span1">&nbsp;</div>
    <div class="span1">&nbsp;</div>
    <div class="span1">&nbsp;</div>
    <div class="span1">&nbsp;</div>
    <div class="span1">&nbsp;</div>
    <div class="span1">&nbsp;</div>
    <div class="span1">&nbsp;</div>
    <div class="span1">&nbsp;</div>
    <div class="span1">&nbsp;</div>
    <div class="span1">&nbsp;</div>
    <div class="span1">&nbsp;</div>
</div>*@

