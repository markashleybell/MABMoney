@model MABMoney.Web.Models.Home.IndexViewModel
@using MABMoney.Web.Models.Home

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/Master.cshtml";
}

<div class="row">
    <div class="span10"><h2>@Model.Account.Name</h2></div> 
    <div class="span2"><div class="heading-mimic">@Model.Account.CurrentBalance.ToString("c")</div></div>
</div>

@using (Html.BeginForm("", "Home", FormMethod.Post, new { @class = "form-inline" }))
{
    @Html.DropDownListFor(x => x.Account_AccountID, Model.Accounts) <input type="submit" class="btn" value="Go" />
}

@*<p>Starting Balance: @Model.Account.StartingBalance.ToString("#0.00"), Current Balance: @Model.Account.CurrentBalance.ToString("#0.00")</p>*@

@*<div class="row" id="test">
    <div class="span1">&nbsp;</div>
    <div class="span1">&nbsp;</div>
    <div class="span1">&nbsp;</div>
    <div class="span1">&nbsp;</div>
    <div class="span1">&nbsp;</div>
    <div class="span1">&nbsp;</div>
    <div class="span1">&nbsp;</div>
    <div class="span1">&nbsp;</div>
    <div class="span1">&nbsp;</div>
    <div class="span1">&nbsp;</div>
    <div class="span1">&nbsp;</div>
    <div class="span1">&nbsp;</div>
</div>*@

<ul class="nav nav-tabs lge">
    <li @Html.Raw((Model.Type == TransactionType.Income) ? "class=\"active\"" : "")><a href="#income" data-toggle="tab">Income: @Model.Transactions.Where(t => t.Amount > 0).Sum(x => x.Amount)</a></li>
    <li @Html.Raw((Model.Type == TransactionType.Expense) ? "class=\"active\"" : "")><a href="#expenses" data-toggle="tab">Expenses: @Model.Transactions.Where(t => t.Amount < 0).Sum(x => Math.Abs(x.Amount))</a></li>
    <li><a href="#budget" data-toggle="tab">Budget</a></li>
</ul>
<div class="tab-content">
    <div class="tab-pane@((Model.Type == TransactionType.Income) ? " active" : "")" id="income">
        @using (Html.BeginForm("CreateTransaction", "Home"))
        {
            <div class="controls controls-row">
                @Html.EditorFor(x => x.Date, new { @class = "span2", placeholder = "Date" })
                @Html.DropDownListFor(x => x.Category_CategoryID, Model.IncomeCategories, "Category...", new { @class = "span2" })
                @Html.TextBoxFor(x => x.Description, new { @class = "span4", placeholder = "Description (optional)" })
                @Html.TextBoxFor(x => x.Amount, new { @class = "span2", placeholder = "Amount" })              
                <div class="span2">
                    <input type="submit" value="Add Income" class="btn btn-primary" />
                </div>
                @Html.HiddenFor(x => x.Account_AccountID)
                <input data-val="true" data-val-required="The Type field is required." name="Type" type="hidden" value="Income">
            </div>
        }
        <table class="table table-striped">
            <caption>Transaction List</caption>
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Description</th>
                    <th>Amount</th>
                    <th>Edit</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var transaction in Model.Transactions.Where(t => t.Amount > 0).OrderByDescending(x => x.Date).ThenByDescending(x => x.TransactionID))
                {
                <tr>
                    <td>@transaction.Date.ToString("dd/MM/yyyy")</td>
                    <td>@transaction.Description</td>
                    <td>@transaction.Amount.ToString("#0.00")</td>
                    <td>@Html.ActionLink("Edit", "Edit", "Transactions", new { id = transaction.TransactionID }, null)</td>
                </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="tab-pane@((Model.Type == TransactionType.Expense) ? " active" : "")" id="expenses">
        @using (Html.BeginForm("CreateTransaction", "Home"))
        {
            <div class="controls controls-row">
                @Html.EditorFor(x => x.Date, new { @class = "span2", placeholder = "Date" })
                @Html.DropDownListFor(x => x.Category_CategoryID, Model.ExpenseCategories, "Category", new { @class = "span2" })
                @Html.TextBoxFor(x => x.Description, new { @class = "span4", placeholder = "Description (optional)" })
                @Html.TextBoxFor(x => x.Amount, new { @class = "span2", placeholder = "Amount" })              
                <div class="span2">
                    <input type="submit" value="Add Expense" class="btn btn-primary" />
                </div>
                @Html.HiddenFor(x => x.Account_AccountID)
                <input data-val="true" data-val-required="The Type field is required." name="Type" type="hidden" value="Expense">
            </div>
        }
        <table class="table table-striped">
            <caption>Transaction List</caption>
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Description</th>
                    <th>Amount</th>
                    <th>Edit</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var transaction in Model.Transactions.Where(t => t.Amount < 0).OrderByDescending(x => x.Date).ThenByDescending(x => x.TransactionID))
                {
                <tr>
                    <td>@transaction.Date.ToString("dd/MM/yyyy")</td>
                    <td>@transaction.Description</td>
                    <td>@transaction.Amount.ToString("#0.00")</td>
                    <td>@Html.ActionLink("Edit", "Edit", "Transactions", new { id = transaction.TransactionID }, null)</td>
                </tr>
                }
            </tbody>
        </table>
    </div>    
    <div class="tab-pane" id="budget">

        @if (Model.Budget != null)
        {
            foreach (var category in Model.Budget.Category_Budgets)
            {
                var percentage = (category.Total / category.Amount * 100);
                var barwidth = Math.Abs(percentage) / 2;
    
            <div class="row">
                <div class="span2"><div class="category-label">@category.Category.Name</div></div>
                <div class="span10">
                    <div class="category-bar @((percentage > 100) ? "over" : "")"><div class="category-stats">@((category.Total).ToString("#0.00")) of @category.Amount.ToString("#0.00") (@percentage.ToString("#0.00")%)</div><div class="category-progress" style="width: @(barwidth)%;">&nbsp;</div></div>
                </div>
            </div>
            }
        }
        else
        {
            <p>Add a budget</p>
        }
    </div>
 </div>

 <p>@Model.NetWorth.ToString("c")</p>

@* <div class="row" id="test">
    <div class="span1">&nbsp;</div>
    <div class="span1">&nbsp;</div>
    <div class="span1">&nbsp;</div>
    <div class="span1">&nbsp;</div>
    <div class="span1">&nbsp;</div>
    <div class="span1">&nbsp;</div>
    <div class="span1">&nbsp;</div>
    <div class="span1">&nbsp;</div>
    <div class="span1">&nbsp;</div>
    <div class="span1">&nbsp;</div>
    <div class="span1">&nbsp;</div>
    <div class="span1">&nbsp;</div>
</div>*@
